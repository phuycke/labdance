CLEAN = "C:/Users/pieter/Downloads/GitHub/phuycke/alpha_theta_timescales/2. Data preparation/Resulting data"
df = read.csv(file.path(CLEAN, "theta_alpha_beta_behavioural.csv"))
names(df)
# > names(df)
# [1] "RT"                  "RT_log"              "Accuracy_label"
# [4] "Accuracy_int"        "Error_int"           "Theta"
# [7] "Alpha"               "Beta"                "Subject_nr"
# [10] "Repetitions_overall" "Repetitions_block"   "Block_overall"
# [13] "Block_specific"      "Condition"           "Trial_overall"
# [16] "Trial_block"         "Response"            "Stimulus_ID"
d = df %>% filter(Condition == "Novel") %>%
mutate(rt = RT / 1000,
repetitions = as.factor(Repetitions_block)) %>%
rename(accuracy = Accuracy_int,
power.theta = Theta,
power.alpha = Alpha,
power.beta = Beta,
subid = Subject_nr)
p = list()
pwr = c("power.alpha", "power.beta", "power.theta")
for (i in 1:3){
temp = d %>% select(repetitions, pwr[i])
temp = d %>% select(repetitions, pwr[i])
if (i == 1){
t = expression(alpha)
} else if (i == 2){
t = expression(beta)
} else{
t = expression(theta)
}
plt = ggplot(temp, aes(x = repetitions,
fill = repetitions)) +
geom_density(alpha = .4) +
theme_bw(base_size = 20) +
scale_fill_brewer("Repetition\ncount", palette = "Set1") +
labs(x = NULL,
y = NULL,
title = t)
p[[i]] = plt
}
# all plots together in same figure and adjust
p <- ggarrange(plotlist      = p,
labels        = LETTERS[1:length(p)],
ncol          = 2,
nrow          = 2,
align         = "h",
font.label    = list(size=20),
common.legend = TRUE,
legend        = "bottom")
p <- annotate_figure(p,
top = text_grob(expression("Distribution of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
hjust = .5, size = 25),
left = text_grob("Density", rot = 90, size = 25),
bottom = text_grob("Repetition count", size = 25))
p
# check average power per repetitions over frequency bands  ----
temp = d %>% select(repetitions, power.theta, power.beta, power.alpha) %>%
reshape::melt(id = c("repetitions"), variable_name = "Power") %>%
rename(power_id = Power,
power_value = value) %>%
mutate(power_id = case_when(power_id == "power.theta" ~ "theta",
power_id == "power.alpha" ~ "alpha",
power_id == "power.beta" ~ "beta")) %>%
group_by(power_id, repetitions) %>% summarise(avg  = mean(power_value),
ci.n = avg - 1.96 * (sd(power_value)/sqrt(length(power_value))),
ci.p = avg + 1.96 * (sd(power_value)/sqrt(length(power_value))),
var  = var(power_value))
p = ggplot(temp, aes(x      = repetitions,
y      = avg,
colour = power_id,
group  = power_id)) +
geom_errorbar(aes(ymin = ci.n,
ymax = ci.p),
width = .25,
size = 1.2) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x = "Repetition count",
y = "Average power (and 95% CI)",
title = expression("Average "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
# check variance per repetitions over frequency bands  ----
p = ggplot(temp, aes(x      = repetitions,
y      = var,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .2),
breaks = seq(0, .2, .05)) +
labs(x = "Repetition count",
y = "Power variance",
title = expression("Variance of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
p
#!/usr/bin/env Rscript
# ------------------------------------------------------ #
#   Author            Pieter Huycke                      #
#   GitHub            @phuycke                           #
#   Description       visualize neural empirical data    #
#   Version.string    R version 4.2.1 (2022-06-23 ucrt)  #
#   Platform          x86_64, mingw32                    #
#   Date created      30/06/2022                         #
# ------------------------------------------------------ #
rm(list = ls())
library(dplyr)
library(ggplot2)
library(ggpubr)
library(grid)
library(RColorBrewer)
# cycle over subjects ----
CLEAN = "C:/Users/pieter/Downloads/GitHub/phuycke/alpha_theta_timescales/2. Data preparation/Resulting data"
df = read.csv(file.path(CLEAN, "theta_alpha_beta_behavioural.csv"))
names(df)
# > names(df)
# [1] "RT"                  "RT_log"              "Accuracy_label"
# [4] "Accuracy_int"        "Error_int"           "Theta"
# [7] "Alpha"               "Beta"                "Subject_nr"
# [10] "Repetitions_overall" "Repetitions_block"   "Block_overall"
# [13] "Block_specific"      "Condition"           "Trial_overall"
# [16] "Trial_block"         "Response"            "Stimulus_ID"
d = df %>% filter(Condition == "Novel") %>%
mutate(rt = RT / 1000,
repetitions = as.factor(Repetitions_block)) %>%
rename(accuracy = Accuracy_int,
power.theta = Theta,
power.alpha = Alpha,
power.beta = Beta,
subid = Subject_nr)
p = list()
pwr = c("power.alpha", "power.beta", "power.theta")
for (i in 1:3){
temp = d %>% select(repetitions, pwr[i])
temp = d %>% select(repetitions, pwr[i])
if (i == 1){
t = expression(alpha)
} else if (i == 2){
t = expression(beta)
} else{
t = expression(theta)
}
plt = ggplot(temp, aes(x = repetitions,
fill = repetitions)) +
geom_density(alpha = .4) +
theme_bw(base_size = 20) +
scale_fill_brewer("Repetition\ncount", palette = "Set1") +
labs(x = NULL,
y = NULL,
title = t)
p[[i]] = plt
}
# all plots together in same figure and adjust
p <- ggarrange(plotlist      = p,
labels        = LETTERS[1:length(p)],
ncol          = 2,
nrow          = 2,
align         = "h",
font.label    = list(size=20),
common.legend = TRUE,
legend        = "bottom")
p <- annotate_figure(p,
top = text_grob(expression("Distribution of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
hjust = .5, size = 25),
left = text_grob("Density", rot = 90, size = 25),
bottom = text_grob("Repetition count", size = 25))
p
# check average power per repetitions over frequency bands  ----
temp = d %>% select(repetitions, power.theta, power.beta, power.alpha) %>%
reshape::melt(id = c("repetitions"), variable_name = "Power") %>%
rename(power_id = Power,
power_value = value) %>%
mutate(power_id = case_when(power_id == "power.theta" ~ "theta",
power_id == "power.alpha" ~ "alpha",
power_id == "power.beta" ~ "beta")) %>%
group_by(power_id, repetitions) %>% summarise(avg  = mean(power_value),
ci.n = avg - 1.96 * (sd(power_value)/sqrt(length(power_value))),
ci.p = avg + 1.96 * (sd(power_value)/sqrt(length(power_value))),
std  = sd(power_value))
p = ggplot(temp, aes(x      = repetitions,
y      = avg,
colour = power_id,
group  = power_id)) +
geom_errorbar(aes(ymin = ci.n,
ymax = ci.p),
width = .25,
size = 1.2) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x = "Repetition count",
y = "Average power (and 95% CI)",
title = expression("Average "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
# check variance per repetitions over frequency bands  ----
p = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .2),
breaks = seq(0, .2, .05)) +
labs(x = "Repetition count",
y = "Power standard deviation",
title = expression("Variance of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
p = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x = "Repetition count",
y = "Power standard deviation",
title = expression("Variance of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
p = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .5),
breaks = seq(0, .5, .1)) +
labs(x = "Repetition count",
y = "Power standard deviation",
title = expression("Variance of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
p = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .5),
breaks = seq(0, .5, .1)) +
labs(x = "Repetition count",
y = "Power standard deviation",
title = expression("Standard deviation of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
p
LETTERS[1:2]
temp = d %>% select(repetitions, power.theta, power.beta, power.alpha) %>%
reshape::melt(id = c("repetitions"), variable_name = "Power") %>%
rename(power_id = Power,
power_value = value) %>%
mutate(power_id = case_when(power_id == "power.theta" ~ "theta",
power_id == "power.alpha" ~ "alpha",
power_id == "power.beta" ~ "beta")) %>%
group_by(power_id, repetitions) %>% summarise(avg  = mean(power_value),
ci.n = avg - 1.96 * (sd(power_value)/sqrt(length(power_value))),
ci.p = avg + 1.96 * (sd(power_value)/sqrt(length(power_value))),
std  = sd(power_value))
p1 = ggplot(temp, aes(x      = repetitions,
y      = avg,
colour = power_id,
group  = power_id)) +
geom_errorbar(aes(ymin = ci.n,
ymax = ci.p),
width = .25,
size = 1.2) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x = "Repetition count",
y = "Average power (and 95% CI)",
title = expression("Average "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
# variance
p2 = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .5),
breaks = seq(0, .5, .1)) +
labs(x = "Repetition count",
y = "Power standard deviation",
title = expression("Standard deviation of "*alpha*", "*beta*" and "*theta*" power ~ repetitions"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
# all plots together in same figure and adjust
p <- ggarrange(plotlist      = list(p1, p2),
labels        = LETTERS[1:2],
ncol          = 2,
nrow          = 1,
align         = "h",
font.label    = list(size=20),
common.legend = TRUE,
legend        = "bottom")
p
temp = d %>% select(repetitions, power.theta, power.beta, power.alpha) %>%
reshape::melt(id = c("repetitions"), variable_name = "Power") %>%
rename(power_id = Power,
power_value = value) %>%
mutate(power_id = case_when(power_id == "power.theta" ~ "theta",
power_id == "power.alpha" ~ "alpha",
power_id == "power.beta" ~ "beta")) %>%
group_by(power_id, repetitions) %>% summarise(avg  = mean(power_value),
ci.n = avg - 1.96 * (sd(power_value)/sqrt(length(power_value))),
ci.p = avg + 1.96 * (sd(power_value)/sqrt(length(power_value))),
std  = sd(power_value))
p1 = ggplot(temp, aes(x      = repetitions,
y      = avg,
colour = power_id,
group  = power_id)) +
geom_errorbar(aes(ymin = ci.n,
ymax = ci.p),
width = .25,
size = 1.2) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x = NULL,
y = "Average power (and 95% CI)",
title = expression("Average "*alpha*", "*beta*" and "*theta*" power"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency band",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
# variance
p2 = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .5),
breaks = seq(0, .5, .1)) +
labs(x = NULL,
y = "Power standard deviation",
title = expression("Standard deviation of "*alpha*", "*beta*" and "*theta*" power"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency band",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
# all plots together in same figure and adjust
p <- ggarrange(plotlist      = list(p1, p2),
labels        = LETTERS[1:2],
ncol          = 2,
nrow          = 1,
align         = "h",
font.label    = list(size=20),
common.legend = TRUE,
legend        = "bottom")
p <- annotate_figure(p,
bottom = text_grob("Repetition count", size = 25))
p
temp = d %>% select(repetitions, power.theta, power.beta, power.alpha) %>%
reshape::melt(id = c("repetitions"), variable_name = "Power") %>%
rename(power_id = Power,
power_value = value) %>%
mutate(power_id = case_when(power_id == "power.theta" ~ "theta",
power_id == "power.alpha" ~ "alpha",
power_id == "power.beta" ~ "beta")) %>%
group_by(power_id, repetitions) %>% summarise(avg  = mean(power_value),
ci.n = avg - 1.96 * (sd(power_value)/sqrt(length(power_value))),
ci.p = avg + 1.96 * (sd(power_value)/sqrt(length(power_value))),
std  = sd(power_value))
p1 = ggplot(temp, aes(x      = repetitions,
y      = avg,
colour = power_id,
group  = power_id)) +
geom_errorbar(aes(ymin = ci.n,
ymax = ci.p),
width = .25,
size = 1.2) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x = NULL,
y = "Average power (and 95% CI)",
title = expression("Average "*alpha*", "*beta*" and "*theta*" power"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency band",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
# variance
p2 = ggplot(temp, aes(x      = repetitions,
y      = std,
colour = power_id,
group  = power_id)) +
geom_line(size = 1.2) +
geom_point(size = 4) +
theme_bw(base_size = 20) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
scale_y_continuous(limits = c(0, .5),
breaks = seq(0, .5, .1)) +
labs(x = NULL,
y = "Power standard deviation",
title = expression("Standard deviation of "*alpha*", "*beta*" and "*theta*" power"),
color = "Frequency\nband") +
scale_color_manual(values = c("#999999", "#E69F00", "#56B4E9"),
name   = "Frequency\nband",
breaks = c("alpha", "beta", "theta"),
labels = c(expression(alpha*" (08 - 12 Hz)"),
expression(beta*" (12 - 30 Hz)"),
expression(theta*" (04 - 08 Hz)")))
# all plots together in same figure and adjust
p <- ggarrange(plotlist      = list(p1, p2),
labels        = LETTERS[1:2],
ncol          = 2,
nrow          = 1,
align         = "h",
font.label    = list(size=20),
common.legend = TRUE,
legend        = "right")
p <- annotate_figure(p,
bottom = text_grob("Repetition count", size = 25))
p
