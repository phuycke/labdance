% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_data.R
\name{simulate_data}
\alias{simulate_data}
\title{simulate_data}
\usage{
simulate_data(
  sub_id = 1,
  n_blocks = 16,
  true_pars = NULL,
  sigma_gen = NULL,
  dataset = NULL
)
}
\arguments{
\item{sub_id}{Optional: only for neural models.
The subject identifier. Can be used to generate different datasets that
each belong to a different "subject".}

\item{n_blocks}{Optional: only for neural models.
Determines the number of experimental blocks within a dataset.}

\item{true_pars}{The LBA parameters used to generate the data.}

\item{sigma_gen}{Optional: only for neural models.
The variance in the generation of the true neural data.}

\item{dataset}{Optional: only when empirical data is available.
This allows data to be generated relying on stimuli actually seen by
subjects.}
}
\value{
data.frame containing simulated behavioral and/or neural data
    depending on the underlying model.
}
\description{
Function that makes calls to simulate_dynamic() or
    simulate_neural() depending on the type of underlying model.
}
\examples{
require(labdance)

set.seed(2022)

# load prepared empirical data
data("data_dynamic")

# get LBA parameters (8 drift rates)
true = param_draw(base_par = c("a", "b", "t0", "sd", "beta"),
                  n_drift  = NULL,
                  dynamic  = TRUE)

# simulate data retaining the stimulus order shown to subject 2,
simulated = simulate_data(true_pars = true,
                          dataset   = data_dynamic)
head(simulated)
#   stim target condition       rt response   mean_v1   mean_v2
# 1    1      1     novel 1.608958        1 0.5000000 0.5000000
# 2    1      1     novel 1.865296        2 0.5230748 0.4769252
# 3    3      2     novel 1.554814        2 0.5000000 0.5000000
# 4    4      2     novel 1.343585        2 0.5000000 0.5000000
# 5    2      1     novel 1.712398        1 0.5000000 0.5000000
# 6    3      2     novel 1.822126        2 0.4769252 0.5230748

# check stimulus order
all(data_dynamic$stim == simulated$stim)
# [1] TRUE

}
